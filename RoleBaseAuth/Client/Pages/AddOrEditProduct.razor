@page "/product/add"
@page "/product/edit/{productId:int}"
@using RoleBaseAuth.Shared.Model
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Administrator")]

<h3>Add Or Edit Product</h3>

<EditForm Model="@product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Name" />
        </div>
        <ValidationMessage For="@(() => product.Name)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Description" />
        </div>
        <ValidationMessage For="@(() => product.Description)" />
    </div>
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">Price</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="product.Price" />
        </div>
        <ValidationMessage For="@(() => product.Price)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int productId { get; set; }

    protected string Title = "Add";
    protected Product product = new();

    protected override async Task OnParametersSetAsync()
    {
        if (productId != 0)
        {
            Title = "Edit";
            product = await Http.GetFromJsonAsync<Product>("Product/" + productId);
        }
    }

    protected async Task SaveProduct()
    {
        if (product.Id != 0)
        {
            await Http.PutAsJsonAsync("Product/UpdateProduct", product);
        }
        else
        {
            await Http.PostAsJsonAsync("Product/CreateProduct", product);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/productdetails");
    }
}